-- MM2 AutoFarm - Floating Panel (Draggable) - Test script
-- Paste vào executor trong Murder Mystery 2
-- Tính năng: AutoFarm, Tween Speed, Noclip, Status, Coin counter, Stop/Reset, Draggable UI

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then return end

-- Config / State
local autofarm_enabled = false
local tween_speed = 20 -- studs per second (default)
local noclip_when_farming = true
local activeCoins = {}
local visited = {}
local autoFarmRunning = false
local currentTween = nil
local ui = {}
local stopFlag = false

-- Helpers
local function isCoin(obj)
	-- coin name detection heuristic (CoinVisual used in original)
	if not obj or not obj.Name then return false end
	return tostring(obj.Name):find("CoinVisual") ~= nil
end

-- Track Coins: event-driven
local function trackCoins()
	activeCoins = {}
	for _, d in ipairs(workspace:GetDescendants()) do
		if isCoin(d) then
			activeCoins[d] = true
		end
	end

	-- DescendantAdded
	local addedConn
	addedConn = workspace.DescendantAdded:Connect(function(obj)
		if isCoin(obj) then
			activeCoins[obj] = true
			-- update UI count
			if ui.countLabel then
				ui.countLabel.Text = ("Coins tracked: %d"):format(#(function() local t=0; for _ in pairs(activeCoins) do t=t+1 end; return t end)())
			end
		end
	end)

	-- DescendantRemoving
	local removedConn
	removedConn = workspace.DescendantRemoving:Connect(function(obj)
		if activeCoins[obj] then
			activeCoins[obj] = nil
			visited[obj] = nil
			if ui.countLabel then
				ui.countLabel.Text = ("Coins tracked: %d"):format(#(function() local t=0; for _ in pairs(activeCoins) do t=t+1 end; return t end)())
			end
		end
	end)

	return {addedConn, removedConn}
end

-- Find closest coin to a position
local function findClosest(position)
	local closest, dist = nil, math.huge
	for coin in pairs(activeCoins) do
		if coin and coin.Parent and coin:IsDescendantOf(workspace) and not visited[coin] then
			local pos
			if coin:IsA("Model") and coin.PrimaryPart then
				pos = coin.PrimaryPart.Position
			elseif coin:IsA("BasePart") then
				pos = coin.Position
			end
			if pos then
				local distance = (pos - position).Magnitude
				if distance < dist then
					dist = distance
					closest = coin
				end
			end
		else
			-- cleanup dead entries
			activeCoins[coin] = nil
			visited[coin] = nil
		end
	end
	return closest
end

-- Clamp Y to avoid void / ceiling teleport issues
local function clampY(pos)
	local minY = workspace.FallenPartsDestroyHeight + 10
	local maxY = 300
	return Vector3.new(pos.X, math.clamp(pos.Y, minY, maxY), pos.Z)
end

-- Stop current tween safely
local function stopCurrentTween()
	if currentTween then
		pcall(function() currentTween:Cancel() end)
		currentTween = nil
	end
end

-- Noclip toggle (applied to local character)
local function setNoclip(state)
	local char = LocalPlayer.Character
	if not char then return end
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			pcall(function() part.CanCollide = not state end)
		end
	end
end

-- AutoFarm loop (single instance)
local function autoFarmLoop()
	if autoFarmRunning then return end
	autoFarmRunning = true
	stopFlag = false

	task.spawn(function()
		while autofarm_enabled and not stopFlag do
			local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
			local root = char:FindFirstChild("HumanoidRootPart") or char:WaitForChild("HumanoidRootPart", 5)
			if not root then
				task.wait(1)
				continue
			end

			-- if no coins, wait
			if next(activeCoins) == nil then
				if ui.statusLabel then ui.statusLabel.Text = "Status: Waiting for coins..." end
				visited = {}
				task.wait(1)
				continue
			end

			local target = findClosest(root.Position)
			if not target then
				visited = {}
				task.wait(0.7)
				continue
			end

			-- get safe target position
			local targetPos
			if target:IsA("Model") and target.PrimaryPart then
				targetPos = target.PrimaryPart.Position
			elseif target:IsA("BasePart") then
				targetPos = target.Position
			end

			if not targetPos then
				visited[target] = true
				task.wait(0.3)
				continue
			end

			if ui.statusLabel then ui.statusLabel.Text = ("Status: Moving to coin (%.1f studs)..."):format((targetPos - root.Position).Magnitude) end

			-- cancel previous tween
			stopCurrentTween()

			-- apply noclip while moving
			if noclip_when_farming then setNoclip(true) end

			-- compute tween
			local safeUnder = clampY(targetPos - Vector3.new(0, 0.5, 0))
			local distance = (safeUnder - root.Position).Magnitude
			local duration = math.max(0.05, distance / math.max(0.001, tween_speed))
			local ti = TweenInfo.new(duration, Enum.EasingStyle.Linear)
			local goal = {CFrame = CFrame.new(safeUnder)}

			currentTween = TweenService:Create(root, ti, goal)
			local completed = false
			currentTween.Completed:Connect(function(state)
				if state == Enum.PlaybackState.Completed then completed = true end
			end)
			currentTween:Play()

			-- wait for completion or coin vanish
			local start = tick()
			while not completed and autofarm_enabled and not stopFlag do
				if not target or not target.Parent or not activeCoins[target] then
					-- coin disappeared -> break to next target
					stopCurrentTween()
					break
				end
				-- safety timeout (in case)
				if tick() - start > duration + 2 then
					break
				end
				task.wait()
			end

			-- done move: mark visited and small wait
			stopCurrentTween()
			visited[target] = true
			if ui.statusLabel then ui.statusLabel.Text = "Status: Collected / Next..." end
			if noclip_when_farming then setNoclip(false) end
			task.wait(0.2)
		end

		-- cleanup on end
		stopCurrentTween()
		if noclip_when_farming then setNoclip(false) end
		autoFarmRunning = false
		if ui.statusLabel then ui.statusLabel.Text = "Status: Idle" end
	end)
end

-- UI Creation - Floating Panel (draggable)
local function createUI()
	-- Clean existing UI if present
	if LocalPlayer.PlayerGui:FindFirstChild("MM2AutoFarmGUI") then
		LocalPlayer.PlayerGui.MM2AutoFarmGUI:Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "MM2AutoFarmGUI"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

	local mainFrame = Instance.new("Frame")
	mainFrame.Name = "Main"
	mainFrame.Size = UDim2.new(0, 360, 0, 420)
	mainFrame.Position = UDim2.new(0.5, -180, 0.2, 0)
	mainFrame.AnchorPoint = Vector2.new(0.5, 0)
	mainFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
	mainFrame.BackgroundTransparency = 0
	mainFrame.BorderSizePixel = 0
	mainFrame.Parent = screenGui
	local uiCorner = Instance.new("UICorner", mainFrame)
	uiCorner.CornerRadius = UDim.new(0, 10)

	-- Title
	local title = Instance.new("TextLabel", mainFrame)
	title.Size = UDim2.new(1, -20, 0, 40)
	title.Position = UDim2.new(0, 10, 0, 10)
	title.BackgroundTransparency = 1
	title.Text = "MM2 AutoFarm - Floating Panel"
	title.TextColor3 = Color3.fromRGB(255,255,255)
	title.Font = Enum.Font.SourceSansBold
	title.TextSize = 18
	title.TextXAlignment = Enum.TextXAlignment.Left

	-- Status label
	local statusLabel = Instance.new("TextLabel", mainFrame)
	statusLabel.Size = UDim2.new(1, -20, 0, 28)
	statusLabel.Position = UDim2.new(0, 10, 0, 52)
	statusLabel.BackgroundTransparency = 1
	statusLabel.Text = "Status: Idle"
	statusLabel.TextColor3 = Color3.fromRGB(200,200,200)
	statusLabel.Font = Enum.Font.SourceSans
	statusLabel.TextSize = 14
	statusLabel.TextXAlignment = Enum.TextXAlignment.Left

	-- Coins tracked label
	local countLabel = Instance.new("TextLabel", mainFrame)
	countLabel.Size = UDim2.new(1, -20, 0, 20)
	countLabel.Position = UDim2.new(0, 10, 0, 82)
	countLabel.BackgroundTransparency = 1
	countLabel.Text = "Coins tracked: 0"
	countLabel.TextColor3 = Color3.fromRGB(200,200,200)
	countLabel.Font = Enum.Font.SourceSans
	countLabel.TextSize = 14
	countLabel.TextXAlignment = Enum.TextXAlignment.Left

	-- Speed slider label
	local speedLabel = Instance.new("TextLabel", mainFrame)
	speedLabel.Size = UDim2.new(1, -20, 0, 18)
	speedLabel.Position = UDim2.new(0, 10, 0, 108)
	speedLabel.BackgroundTransparency = 1
	speedLabel.Text = ("Tween Speed: %d"):format(tween_speed)
	speedLabel.TextColor3 = Color3.fromRGB(200,200,200)
	speedLabel.Font = Enum.Font.SourceSans
	speedLabel.TextSize = 14
	speedLabel.TextXAlignment = Enum.TextXAlignment.Left

	-- Speed slider (simple left/right buttons)
	local minusBtn = Instance.new("TextButton", mainFrame)
	minusBtn.Size = UDim2.new(0, 28, 0, 28)
	minusBtn.Position = UDim2.new(0, 10, 0, 132)
	minusBtn.Text = "-"
	minusBtn.Font = Enum.Font.SourceSansBold
	minusBtn.TextSize = 20
	minusBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
	minusBtn.TextColor3 = Color3.fromRGB(255,255,255)
	minusBtn.AutoButtonColor = true
	local plusBtn = Instance.new("TextButton", mainFrame)
	plusBtn.Size = UDim2.new(0, 28, 0, 28)
	plusBtn.Position = UDim2.new(0, 310, 0, 132)
	plusBtn.Text = "+"
	plusBtn.Font = Enum.Font.SourceSansBold
	plusBtn.TextSize = 20
	plusBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
	plusBtn.TextColor3 = Color3.fromRGB(255,255,255)
	plusBtn.AutoButtonColor = true

	-- Slider visual (bar)
	local sliderBar = Instance.new("Frame", mainFrame)
	sliderBar.Size = UDim2.new(1, -60, 0, 28)
	sliderBar.Position = UDim2.new(0, 44, 0, 132)
	sliderBar.BackgroundColor3 = Color3.fromRGB(40,40,40)
	local sliderCorner = Instance.new("UICorner", sliderBar)
	sliderCorner.CornerRadius = UDim.new(0,6)
	local sliderFill = Instance.new("Frame", sliderBar)
	sliderFill.Size = UDim2.new(math.clamp(tween_speed/60, 0, 1), 0, 1, 0) -- normalized to 60 max visually
	sliderFill.BackgroundColor3 = Color3.fromRGB(0,180,0)
	local fillCorner = Instance.new("UICorner", sliderFill)
	fillCorner.CornerRadius = UDim.new(0,6)

	-- AutoFarm Toggle button
	local toggleBtn = Instance.new("TextButton", mainFrame)
	toggleBtn.Size = UDim2.new(1, -20, 0, 48)
	toggleBtn.Position = UDim2.new(0, 10, 0, 176)
	toggleBtn.Text = "Enable AutoFarm"
	toggleBtn.Font = Enum.Font.SourceSansBold
	toggleBtn.TextSize = 18
	toggleBtn.BackgroundColor3 = Color3.fromRGB(200,0,0)
	toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
	toggleBtn.AutoButtonColor = true
	local toggleCorner = Instance.new("UICorner", toggleBtn)

	-- Noclip toggle
	local noclipBtn = Instance.new("TextButton", mainFrame)
	noclipBtn.Size = UDim2.new(1, -20, 0, 36)
	noclipBtn.Position = UDim2.new(0, 10, 0, 234)
	noclipBtn.Text = "Noclip While Farming: ON"
	noclipBtn.Font = Enum.Font.SourceSans
	noclipBtn.TextSize = 14
	noclipBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
	noclipBtn.TextColor3 = Color3.fromRGB(255,255,255)

	-- Stop/Reset button
	local stopBtn = Instance.new("TextButton", mainFrame)
	stopBtn.Size = UDim2.new(1, -20, 0, 40)
	stopBtn.Position = UDim2.new(0, 10, 0, 278)
	stopBtn.Text = "Stop & Reset"
	stopBtn.Font = Enum.Font.SourceSansBold
	stopBtn.TextSize = 16
	stopBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
	stopBtn.TextColor3 = Color3.fromRGB(255,255,255)

	-- Footer / hint
	local hint = Instance.new("TextLabel", mainFrame)
	hint.Size = UDim2.new(1, -20, 0, 36)
	hint.Position = UDim2.new(0, 10, 1, -44)
	hint.BackgroundTransparency = 1
	hint.Text = "Tip: Move this panel by dragging the title."
	hint.Font = Enum.Font.SourceSans
	hint.TextSize = 12
	hint.TextColor3 = Color3.fromRGB(160,160,160)
	hint.TextXAlignment = Enum.TextXAlignment.Left

	-- Draggable via title
	local dragging, dragInput, dragStart, startPos
	title.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	title.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	-- UI refs
	ui.screenGui = screenGui
	ui.mainFrame = mainFrame
	ui.statusLabel = statusLabel
	ui.countLabel = countLabel
	ui.speedLabel = speedLabel
	ui.sliderFill = sliderFill
	ui.toggleBtn = toggleBtn
	ui.noclipBtn = noclipBtn
	ui.stopBtn = stopBtn
	ui.minusBtn = minusBtn
	ui.plusBtn = plusBtn

	-- Button behaviors
	minusBtn.MouseButton1Click:Connect(function()
		tween_speed = math.clamp(tween_speed - 1, 1, 255)
		speedLabel.Text = ("Tween Speed: %d"):format(tween_speed)
		ui.sliderFill.Size = UDim2.new(math.clamp(tween_speed/60,0,1),0,1,0)
	end)
	plusBtn.MouseButton1Click:Connect(function()
		tween_speed = math.clamp(tween_speed + 1, 1, 255)
		speedLabel.Text = ("Tween Speed: %d"):format(tween_speed)
		ui.sliderFill.Size = UDim2.new(math.clamp(tween_speed/60,0,1),0,1,0)
	end)

	toggleBtn.MouseButton1Click:Connect(function()
		autofarm_enabled = not autofarm_enabled
		if autofarm_enabled then
			toggleBtn.Text = "Disable AutoFarm"
			toggleBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
			if ui.statusLabel then ui.statusLabel.Text = "Status: Starting AutoFarm..." end
			-- init coin tracking & start loop
			trackCoins()
			autoFarmLoop()
		else
			toggleBtn.Text = "Enable AutoFarm"
			toggleBtn.BackgroundColor3 = Color3.fromRGB(200,0,0)
			if ui.statusLabel then ui.statusLabel.Text = "Status: Stopping..." end
			-- stop
			stopFlag = true
			autofarm_enabled = false
			stopCurrentTween()
			setNoclip(false)
		end
	end)

	noclipBtn.MouseButton1Click:Connect(function()
		noclip_when_farming = not noclip_when_farming
		noclipBtn.Text = "Noclip While Farming: " .. (noclip_when_farming and "ON" or "OFF")
	end)

	stopBtn.MouseButton1Click:Connect(function()
		-- full reset
		autofarm_enabled = false
		stopFlag = true
		stopCurrentTween()
		setNoclip(false)
		activeCoins = {}
		visited = {}
		autoFarmRunning = false
		if ui.statusLabel then ui.statusLabel.Text = "Status: Reset / Idle" end
		if ui.countLabel then ui.countLabel.Text = "Coins tracked: 0" end
		toggleBtn.Text = "Enable AutoFarm"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(200,0,0)
	end)
end

-- Initialize UI and tracking
createUI()
-- initial track so UI shows count quickly
local conns = trackCoins()

-- keep UI coin count updated periodically
task.spawn(function()
	while true do
		if ui.countLabel then
			local count = 0
			for _ in pairs(activeCoins) do count = count + 1 end
			ui.countLabel.Text = ("Coins tracked: %d"):format(count)
		end
		task.wait(0.8)
	end
end)

-- Respawn support: re-apply noclip off and ensure UI persists
LocalPlayer.CharacterAdded:Connect(function()
	task.wait(0.7)
	setNoclip(false)
end)

-- End of script
